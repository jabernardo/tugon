{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple REST API for the Boiler Plate API",
        "title": "Tugon",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/v1/hello": {
            "get": {
                "description": "A simple greeting earthlings!",
                "produces": [
                    "text/plain"
                ],
                "responses": {
                    "200": {
                        "description": "Hello World!",
                        "schema": {
                            "$ref": "#/definitions/core.SuccessResponse"
                        }
                    }
                }
            }
        },
        "/v1/ping": {
            "get": {
                "description": "Check API health",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.WrappedResponse"
                        }
                    }
                }
            }
        },
        "/v1/todo/": {
            "put": {
                "description": "Create a TODO item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "parameters": [
                    {
                        "description": "Todo Object",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repositories.Todo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/todo.WrappedCreateItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/core.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/todo/all": {
            "get": {
                "description": "Get all TODO items",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/todo.WrappedGetAllResponse"
                        }
                    }
                }
            }
        },
        "/v1/todo/{id}": {
            "get": {
                "description": "Get specific TODO item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "TODO ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/todo.WrappedGetItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/core.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/core.FailureResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete specific TODO item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "TODO ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/core.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/core.FailureResponse"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/core.FailureResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a TODO item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "TODO ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Todo Object",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repositories.Todo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/core.FailureResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "core.FailureResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "core.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "repositories.Todo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "todo.WrappedCreateItem": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "todo.WrappedGetAllResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repositories.Todo"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "todo.WrappedGetItem": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/repositories.Todo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "v1.MemStats": {
            "type": "object",
            "properties": {
                "alloc": {
                    "type": "number"
                },
                "gc_cycle": {
                    "type": "integer"
                },
                "gc_last": {
                    "type": "integer"
                },
                "gc_next": {
                    "type": "integer"
                },
                "sys": {
                    "type": "number"
                }
            }
        },
        "v1.Stats": {
            "type": "object",
            "properties": {
                "memstats": {
                    "$ref": "#/definitions/v1.MemStats"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "v1.WrappedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/v1.Stats"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}